// <auto-generated />
using System;
using EventPlanner.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EventPlanner.Migrations
{
    [DbContext(typeof(EventPlannerDbContext))]
    [Migration("20240416000802_Fix Initial Migration")]
    partial class FixInitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EventPlanner.Entities.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventId"));

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventDescription")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EventName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Location")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("EventId");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            EventId = 1,
                            EndDate = new DateTime(2024, 5, 16, 20, 8, 1, 708, DateTimeKind.Local).AddTicks(4835),
                            EventDescription = "A lowkey party in the center of the Pacific Ocean.",
                            EventName = "Danny's Graduation Party",
                            Location = "Pacific Ocean",
                            StartDate = new DateTime(2024, 5, 15, 20, 8, 1, 708, DateTimeKind.Local).AddTicks(4724)
                        },
                        new
                        {
                            EventId = 2,
                            EndDate = new DateTime(2024, 5, 21, 20, 8, 1, 708, DateTimeKind.Local).AddTicks(4843),
                            EventDescription = "An EDM concert at Bogart's.",
                            EventName = "EDM Concert",
                            Location = "2621 Short Vine St, Cincinnati, OH 45219",
                            StartDate = new DateTime(2024, 5, 20, 20, 8, 1, 708, DateTimeKind.Local).AddTicks(4840)
                        },
                        new
                        {
                            EventId = 3,
                            EndDate = new DateTime(2024, 5, 23, 20, 8, 1, 708, DateTimeKind.Local).AddTicks(4849),
                            EventDescription = "A retirement party for Joe.",
                            EventName = "Retirement Party",
                            Location = "400 Broadway, Cincinnati, OH 45202",
                            StartDate = new DateTime(2024, 5, 22, 20, 8, 1, 708, DateTimeKind.Local).AddTicks(4847)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
