@page "/"
@using EventPlanner.Models
@inject HttpClient httpClient
@inject NavigationManager navigation

<h1>Event Planner</h1>

@if (events.Count > 0)
{
    <div class="card-container">
        @foreach (var @eventObj in events)
        {
            <div class="card">
                <h3>@eventObj.EventName</h3>
                <p>@eventObj.Venue!.Location</p>
                <p>@eventObj.EventDate</p>
                <div class="button-container">
                    <FluentButton @onclick="@(() => UpdateEvent(@eventObj))">Update</FluentButton><br />
                    <FluentButton @onclick="@(() => ManageTaskItems(@eventObj))">Manage Task Items</FluentButton><br />
                    <FluentButton @onclick="@(() => ManageAttendees(@eventObj))">Manage Attendees</FluentButton><br />
                    <FluentButton @onclick="@(() => DeleteEvent(@eventObj))">Delete Event</FluentButton><br />
                </div>
            </div>
        }
    </div>
}
else
{
    <p>No events found!</p>
}

<style>
    .card-container {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
    }

    .card {
        border: 1px solid #ccc;
        border-radius: 5px;
        padding: 10px;
        width: 300px;
        background-color: #f9f9f9;
    }

    .button-container {
        margin-top: 10px;
    }

        .button-container button {
            margin-right: 10px;
        }
</style>

@code {
    private List<Event> events = new List<Event>();

    protected override async Task OnInitializedAsync()
    {
        events = await httpClient.GetFromJsonAsync<List<Event>>("api/Event");
    }

    private void UpdateEvent(Event @event)
    {
        navigation.NavigateTo($"/update/{@event.EventId}");
    }

    private void ManageTaskItems(Event @event)
    {
        navigation.NavigateTo($"/managetaskitems/{@event.EventId}");
    }

    private void ManageAttendees(Event @event)
    {
        navigation.NavigateTo($"/manageattendees/{@event.EventId}");
    }

    private void DeleteEvent(Event @event)
    {
        navigation.NavigateTo($"/deleteevent/{@event.EventId}");
    }
}